name: Android Build - Final Working Version

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    # Jika Anda ingin kontrol kustom, masukkan input di sini (seperti yang kita bahas sebelumnya)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    # 1. SETUP JAVA
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    # 2. SETUP ANDROID SDK (Memperbaiki Peringatan Lama)
    - name: Setup Android SDK (Fixing Old Warnings)
      uses: android-actions/setup-android@v3
      with:
        # Menghapus 'api-level' dan 'build-tools' karena menyebabkan peringatan.
        # Menggunakan cmdline-tools-version yang merupakan input valid.
        cmdline-tools-version: 'latest' 
        
    # 3. FIX PATH & EXECUTABLE
    - name: Fix make.sh cmdline-tools path
      run: |
        # Buat symlink agar make.sh dapat menemukan cmdline-tools
        mkdir -p ./cmdline-tools
        if [ -d "$ANDROID_SDK_ROOT/cmdline-tools/latest" ]; then
          ln -s "$ANDROID_SDK_ROOT/cmdline-tools/latest" ./cmdline-tools
        else
          ln -s "$ANDROID_SDK_ROOT/cmdline-tools" ./cmdline-tools
        fi
        
    - name: Make make.sh Executable
      run: chmod +x make.sh

    # 4. ENVIRONMENT SIGNING (PENTING untuk Gradle)
    - name: Set Keystore Environment Variables
      # Variabel ini harus diambil dari Secret GitHub Anda
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        echo "KEYSTORE_PASS=$KEYSTORE_PASSWORD" >> $GITHUB_ENV
        echo "KEY_ALIAS=$KEY_ALIAS" >> $GITHUB_ENV
        echo "KEY_PASS=$KEY_PASSWORD" >> $GITHUB_ENV
        
    # 5. CONFIG & KEYGEN
    - name: Run make.sh Apply Config
      run: ./make.sh apply_config 

    - name: Run make.sh keygen (Creates my-release-key.jks)
      run: ./make.sh keygen

    # 6. BUILD
    - name: Build Release (APK and AAB)
      # Menjalankan Gradle menggunakan variabel lingkungan yang diatur di langkah 4.
      run: ./gradlew :app:assembleRelease :app:bundleRelease

    # 7. FIND & UPLOAD ARTIFACTS
    - name: Find Build Artifacts
      id: find-artifacts
      run: |
        # Cari file release yang sudah ditandatangani
        BUILD_DIR="${{ github.workspace }}/app/build"
        
        # Cari APK dan AAB (Asumsi sudah ditandatangani dan dinamai dengan benar)
        APK_PATH=$(find "$BUILD_DIR" -name "*release.apk" -type f | head -n 1)
        AAB_PATH=$(find "$BUILD_DIR" -name "*release.aab" -type f | head -n 1)
        
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "aab_path=$AAB_PATH" >> $GITHUB_OUTPUT

    - name: Upload Keystore
      uses: actions/upload-artifact@v4
      with:
        name: keystore-file
        path: ${{ github.workspace }}/my-release-key.jks # Gunakan path yang lebih stabil

    - name: Upload APK Release
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: ${{ steps.find-artifacts.outputs.apk_path }}

    - name: Upload AAB Release
      uses: actions/upload-artifact@v4
      with:
        name: release-aab
        path: ${{ steps.find-artifacts.outputs.aab_path }}
