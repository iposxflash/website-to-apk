name: Android Build - Final Version

on:
  # Trigger workflow saat ada push ke branch 'main'
  push:
    branches:
      - main
  # Trigger workflow saat ada Pull Request ke branch 'main'
  pull_request:
    branches:
      - main
  # Ini adalah langkah tambahan: Memungkinkan pemicuan manual dari GitHub Actions UI
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      # Mengambil kode dari repositori
      uses: actions/checkout@v4

    - name: Set up JDK 17
      # Mengatur Java Development Kit yang diperlukan untuk Gradle
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    - name: Make make.sh Executable
      # Memberikan izin eksekusi pada skrip make.sh
      run: chmod +x make.sh

    - name: Run make.sh keygen
      # Menjalankan skrip untuk membuat keystore (my-release-key.jks)
      run: ./make.sh keygen

    - name: Get Project Root Path
      id: get-root-path
      # Menyimpan root path repositori (untuk digunakan di langkah selanjutnya)
      run: |
        echo "ROOT_DIR=$(pwd)" >> $GITHUB_ENV
        echo "APP_DIR=$(pwd)/app" >> $GITHUB_ENV

    - name: Build Release (APK and AAB)
      # Menjalankan perintah Gradle untuk menghasilkan APK dan AAB.
      # Konfigurasi signing diambil dari app/build.gradle.
      run: |
        ./gradlew assembleRelease bundleRelease
      working-directory: ${{ env.APP_DIR }}

    - name: Find Build Artifacts
      id: find-artifacts
      # Mencari jalur pasti dari file APK dan AAB yang telah ditandatangani
      run: |
        BUILD_DIR="${{ env.APP_DIR }}/build"
        
        # Cari APK rilis
        APK_PATH=$(find "$BUILD_DIR" -name "*.apk" -type f | grep "release" | head -n 1)
        # Cari AAB rilis
        AAB_PATH=$(find "$BUILD_DIR" -name "*.aab" -type f | grep "release" | head -n 1)
        
        # Simpan jalur sebagai output
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "aab_path=$AAB_PATH" >> $GITHUB_OUTPUT

    - name: Upload Keystore
      uses: actions/upload-artifact@v4
      with:
        name: keystore-file
        # Mengunggah keystore dengan nama yang dikonfirmasi: my-release-key.jks
        path: ${{ env.ROOT_DIR }}/my-release-key.jks
        # Catatan: Jika skrip kamu menyimpan keystore di lokasi lain, harap sesuaikan path ini.

    - name: Upload APK Release
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: ${{ steps.find-artifacts.outputs.apk_path }}

    - name: Upload AAB Release
      uses: actions/upload-artifact@v4
      with:
        name: release-aab
        path: ${{ steps.find-artifacts.outputs.aab_path }}
