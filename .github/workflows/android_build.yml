name: Android Build - Final Working Version

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3 
      with:
        api-level: 33
        build-tools: 33.0.0

    - name: Fix make.sh cmdline-tools path
      # Memperbaiki masalah path untuk skrip make.sh
      run: |
        mkdir -p ./cmdline-tools
        if [ -d "$ANDROID_SDK_ROOT/cmdline-tools" ]; then
          ln -s "$ANDROID_SDK_ROOT/cmdline-tools" ./cmdline-tools
        else
          ln -s "$ANDROID_SDK_ROOT/cmdline-tools/latest" ./cmdline-tools
        fi
        
    - name: Make make.sh Executable
      run: chmod +x make.sh

    # LANGKAH BARU: Menjalankan skrip untuk menerapkan konfigurasi (link, nama, dll.)
    - name: Run make.sh Configuration
      # ASUMSI: command './make.sh' (tanpa argumen) menjalankan konfigurasi dari webapk.conf
      # Jika command kamu berbeda (misalnya './make.sh config'), silakan GANTI './make.sh'
      run: ./make.sh 

    - name: Run make.sh keygen
      # Langkah ini tetap dijalankan untuk membuat keystore untuk signing
      run: ./make.sh keygen

    - name: Get Project Root Path
      id: get-root-path
      run: |
        echo "ROOT_DIR=$(pwd)" >> $GITHUB_ENV

    - name: Build Release (APK and AAB)
      run: |
        ./gradlew :app:assembleRelease :app:bundleRelease

    - name: Find Build Artifacts
      id: find-artifacts
      run: |
        BUILD_DIR="${{ env.ROOT_DIR }}/app/build"
        
        APK_PATH=$(find "$BUILD_DIR" -name "*.apk" -type f | grep "release" | head -n 1)
        AAB_PATH=$(find "$BUILD_DIR" -name "*.aab" -type f | grep "release" | head -n 1)
        
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "aab_path=$AAB_PATH" >> $GITHUB_OUTPUT

    - name: Upload Keystore
      uses: actions/upload-artifact@v4
      with:
        name: keystore-file
        path: ${{ env.ROOT_DIR }}/my-release-key.jks

    - name: Upload APK Release
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: ${{ steps.find-artifacts.outputs.apk_path }}

    - name: Upload AAB Release
      uses: actions/upload-artifact@v4
      with:
        name: release-aab
        path: ${{ steps.find-artifacts.outputs.aab_path }}
