name: Android Build - Final Version V3

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    # PERBAIKAN: Menggunakan action yang berbeda untuk setup SDK, dan menyertakan tools
    - name: Setup Android SDK and Tools
      uses: android/setup-android@v3
      with:
        # Menginstal API level dan build tools yang dibutuhkan
        api-level: 33 
        build-tools: 33.0.0
        # Menerima lisensi Android SDK secara otomatis
        accept-licenses: true

    # PERBAIKAN: Menambah path Android Tools ke lingkungan PATH
    - name: Set Android SDK Paths
      run: |
        # Asumsi SDK di /usr/local/lib/android/sdk/
        # Tambahkan platform-tools (untuk adb) dan tools lain ke PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/tools" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        # Baris ini memastikan skrip dapat menemukan alat-alat command line
        
    - name: Make make.sh Executable
      run: chmod +x make.sh

    - name: Run make.sh keygen
      # Kita coba jalankan dengan izin sudo, karena skrip mungkin memerlukan izin sistem.
      # Serta memastikan skrip dapat menemukan cmdline-tools
      run: |
        ./make.sh keygen 
      # JIKA GAGAL, coba baris berikut: sudo ./make.sh keygen 

    - name: Get Project Root Path
      id: get-root-path
      run: |
        echo "ROOT_DIR=$(pwd)" >> $GITHUB_ENV
        echo "APP_DIR=$(pwd)/app" >> $GITHUB_ENV
        
    - name: Build Release (APK and AAB)
      run: |
        ./gradlew assembleRelease bundleRelease
      working-directory: ${{ env.APP_DIR }}

    - name: Find Build Artifacts
      id: find-artifacts
      run: |
        BUILD_DIR="${{ env.APP_DIR }}/build"
        APK_PATH=$(find "$BUILD_DIR" -name "*.apk" -type f | grep "release" | head -n 1)
        AAB_PATH=$(find "$BUILD_DIR" -name "*.aab" -type f | grep "release" | head -n 1)
        
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "aab_path=$AAB_PATH" >> $GITHUB_OUTPUT

    - name: Upload Keystore
      uses: actions/upload-artifact@v4
      with:
        name: keystore-file
        path: ${{ env.ROOT_DIR }}/my-release-key.jks

    - name: Upload APK Release
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: ${{ steps.find-artifacts.outputs.apk_path }}

    - name: Upload AAB Release
      uses: actions/upload-artifact@v4
      with:
        name: release-aab
        path: ${{ steps.find-artifacts.outputs.aab_path }}
