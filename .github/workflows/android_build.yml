# .github/workflows/android.yml
name: Build Android APK from Website (Dynamic Keygen - UNSAFE)

on:
  workflow_dispatch:
    inputs:
      # PERINGATAN KERAS: INPUT INI AKAN TERLIHAT DI LOG GITHUB ACTIONS!
      store_pass:
        description: 'Keystore Password (storepass)'
        required: true
        default: 'my_store_pass'
      key_pass:
        description: 'Key Password (keypass) [Kosongkan jika sama dengan Storepass]'
        required: false
        default: ''
        
      # Input Keystore DNAME (Detail Pengembang)
      keystore_dname:
        description: 'Detail Keystore DNAME (Contoh: CN=Name,O=Org,C=ID)'
        required: true
        default: 'CN=My App Developer,O=MyCorp,C=US'
      
      # Input Konfigurasi Aplikasi
      website_url:
        description: 'URL Website yang akan dijadikan APK'
        required: true
        default: 'https://mysite.id'
      app_name:
        description: 'Nama Tampilan Aplikasi'
        required: true
        default: 'Web APK Builder'
        
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # 1. Setup Java 17
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # 2. Setup Android SDK Tools (Memperbaiki Error yang Anda alami)
      - name: Install Android Build Tools
        # Menginstal versi yang diperlukan (sesuai build.gradle standar)
        run: |
          # SDK Manager harus tersedia setelah actions/setup-java
          yes | sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"
          
      # 3. Siapkan Environment Variables dan Config File dari Input
      - name: Setup Dynamic Variables and Config File
        run: |
          echo "KEYSTORE_STORE_PASS=${{ github.event.inputs.store_pass }}" >> $GITHUB_ENV
          
          # Jika key_pass diisi, gunakan; jika tidak, make.sh akan menggunakan store_pass
          if [ -n "${{ github.event.inputs.key_pass }}" ]; then
            echo "KEYSTORE_KEY_PASS=${{ github.event.inputs.key_pass }}" >> $GITHUB_ENV
          fi
          
          echo "KEYSTORE_DNAME_INFO=${{ github.event.inputs.keystore_dname }}" >> $GITHUB_ENV
          
          # Buat file konfigurasi dinamis yang akan digunakan oleh make.sh build
          echo "mainURL=${{ github.event.inputs.website_url }}" > webapk.conf
          echo "name=${{ github.event.inputs.app_name }}" >> webapk.conf
          echo "Konfigurasi dan variabel keygen telah disiapkan."
          
      # 4. Generate Keystore (Menggunakan Variabel Lingkungan yang disiapkan di step 3)
      - name: Generate Keystore
        run: |
          # chmod harus dipanggil di setiap step baru, kecuali di langkah sebelumnya
          chmod +x make.sh 
          ./make.sh keygen
          
      # 5. Lanjutkan Proses Build
      - name: Build and Sign APK
        run: ./make.sh build webapk.conf

      # 6. Upload APK
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.app_name }}-release-apk
          # Biasanya file APK rilis diletakkan di sini:
          path: app/build/outputs/apk/release/app-release.apk
